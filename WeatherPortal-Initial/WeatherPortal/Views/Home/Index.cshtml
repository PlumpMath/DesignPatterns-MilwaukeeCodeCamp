@model WeatherPortal.Models.HomeIndexModel
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Design Patterns Demonstration</h1>
    <p class="lead">This website serves as a simple container to demonstrate some design patterns.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>


    <div class="row">
        <div class="col-md-6" style="padding: 5px">            
            <p>
                This simple page is getting the weather for a location and displaying the results in a partial view.
                In this initial state, the application is programmed directly against a third party API.  What we want to
                do is to introduce some abstraction into our design through the use of an interface and the bridge design
                pattern.
            </p>
            <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
        </div>

        <div class="col-md-4 col-md-offset-2">
            @Html.Partial("_WeatherWidget", Model.WeatherData)
            <p style="margin-top: 20px">
            <p>
                Get weather for zip code:
            </p>
            @using (Html.BeginForm("index"))
            {
                <p>
                    <input id="weatherZipCode" type="text" name="zipCode" />
                </p>
                <p>
                    <input type="submit" class="btn btn-succes" value="Get Weather"/>
                </p>
            }
                
            </p>
        </div>

    </div>
